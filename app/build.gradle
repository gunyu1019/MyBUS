plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "kr.yhs.traffic"
        minSdk 26
        targetSdk 34
        versionCode 1112
        versionName "1.2.0"
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptln"
        freeCompilerArgs += "-opt-in=androidx.wear.compose.material.ExperimentalWearMaterialApi"
        freeCompilerArgs += "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi"
        freeCompilerArgs += "-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi"
    }
    namespace "kr.yhs.traffic"
}

dependencies {
    implementation(libs.androidx.coreKtx)
    implementation(libs.androidx.core.splashscreen)
    implementation(libs.kotlin.reflect)
    implementation(libs.percentlayout)
    implementation(libs.legacy)
    implementation(libs.lifecycle)
    implementation(libs.security)

    // Wearable
    implementation(libs.wear)
    implementation(libs.wear.input)
    implementation(libs.wear.tile)
    implementation(libs.wear.tile.material)

    // Google Play Services
    implementation(libs.google.gms.wearable)
    implementation(libs.google.gms.location)

    // Coroutines
    implementation(libs.coroutines.android)
    implementation(libs.coroutines.core)
    implementation(libs.coroutines.guava)
    implementation(libs.coroutines.playServices)

    // Accompaist Pager & Permission
    implementation(libs.accompaist.pagerIndicators)
    implementation(libs.accompaist.permissions)

    // Jetpack Compose
    implementation(libs.androidx.activity.compose)
    implementation(libs.compose.uiToolingPreview)
    implementation(libs.compose.foundation)
    implementation(libs.compose.materialIconExtended)

    // Wear Jetpack Compose
    implementation(libs.compose.wear.material)
    implementation(libs.compose.wear.foundation)
    implementation(libs.compose.wear.navigation)

    // Horologist
    implementation(libs.horologist.tiles)
    implementation(libs.horologist.composeLayout)

    // Retrofit
    implementation(libs.retrofit.core)
    implementation(libs.retrofit.converter.gson)
    implementation(libs.retrofit.converter.scalars)

    // Fragment
    implementation(libs.androidx.fragment)
    implementation(libs.androidx.fragmentKtx)

    // For Testing
    testImplementation(libs.bundles.tests)
    androidTestImplementation(libs.bundles.androidTest)
    debugImplementation(libs.bundles.debugTest)

    compileOnly(libs.wearable)
}